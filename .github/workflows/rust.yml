name: Rust

on:
    push:
      branches: [ "main" ]
    pull_request:
      branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: checkout codebase
      uses: actions/checkout@v4
      with:
          fetch-depth: 0
          submodules: recursive
    - name: restore timestamps
      uses: chetan/git-restore-mtime-action@v2
    - name: Create Lockfile
      run: cargo tree --verbose
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Make Documentation
      run: |
        cargo doc --verbose --no-deps
        rm -rf ./docs
        echo "<meta http-equiv=\"refresh\" content=\"0; url=cybergrape\">" > target/doc/index.html
        rm target/doc/.lock
        cp -r target/doc ./docs
    - name: Upload Documentation Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: "docs/"

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: macos-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

